{"version":3,"sources":["main.js","js/remote.js","js/sync.js","js/sync_list.js","js/utility.js"],"names":["$","loadPage","page","$pageBody","load","responseText","textStatus","jqXHR","attr","window","JSVIEW","ready","swal","defaultPage","onhashchange","location","hash","substr","jQuery","context","click","e","stopPropagation","preventDefault","action","target","attributes","value","title","capitalize","text","showCancelButton","confirm","get","then","setTimeout","document","reload","fail","errorThrown","type","INTERVAL","$qrcode","sid","timeout","times","qrcode","width","height","hnd","setInterval","data","synced","hide","show","clearInterval","fomratters","datetime","moment","format","status","0","1","2","each","index","el","innerHTML","innerText","closeOnConfirm","post","lastSync","Date","now","String","prototype","this","charAt","toUpperCase","slice"],"mappings":"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","file":"all.min.js","sourcesContent":["($ => {\n    // oggetto che andra' a contenere i riferimeti ai JS di tutte le pagine\n    window.JSVIEW = {\n        // \"page_name\": {\n        //     \"ready\": function(context) {}\n        // }\n    };\n    \n    /**\n     * Carica la pagina specificata da \"page\"\n     *\n     * @param      {string}   page    nome della pagina da caricare\n     */\n    function loadPage(page) {\n        const $pageBody = $('.page-body');\n        $pageBody.load('/' + page,\n            (responseText, textStatus, jqXHR) => {\n                if (textStatus === 'success') {\n                    $pageBody.attr('data-page', page);\n                    // lancio lo script della pagina caicata\n                    window.JSVIEW[page] && window.JSVIEW[page].ready($pageBody);\n                } else {\n                    swal('Page not found');\n                }\n            });\n    }\n\n    $(() => {\n        // pagina di default\n        const defaultPage = 'sync';\n        // evento scatenato al cambio della parte hash\n        window.onhashchange = (() => {\n            loadPage(location.hash.substr(1) || defaultPage);\n        });\n        // se non ci sono pagine specificate nell'hash, carico una pagina di default\n        loadPage(location.hash.substr(1) || defaultPage);\n    });\n})(jQuery);\n","($ => {\n    window.JSVIEW['remote'] = {\n        ready: (context) => {\n            $('button[data-action]', context).click(e => {\n                e.stopPropagation();\n                e.preventDefault();\n\n                const action = e.target.attributes['data-action'].value;\n\n                swal({\n                        title: action.capitalize() + ' current process?',\n                        text: 'This may take a few seconds.',\n                        showCancelButton: true\n                    },\n                    confirm => {\n                        if (confirm) {\n                            $.get('/remote/' + action).then(() => {\n                                // ritardo il refresh altrimenti rischio che il comando non sia stato ancora eseguito\n                                setTimeout(() => { document.location.reload(true); }, 500);\n                            }).fail((jqXHR, textStatus, errorThrown) => {\n                                swal({ title: 'Load processes', text: textStatus + ': ' + errorThrown, type: 'error' });\n                            });\n                        }\n                    });\n            });\n        }\n    }\n})(jQuery);\n","($ => {\n    const INTERVAL = 2000;\n\n    window.JSVIEW['sync'] = {\n        ready: (context) => {\n            const $qrcode = $('#qrcode', context);\n            const sid = $qrcode.attr('data-sid');\n            const timeout = +$qrcode.attr('data-timeout') || 30000;\n            let times = timeout / INTERVAL;\n            // renderizzo il sid passato con la pagina\n            $qrcode\n                .qrcode({\n                    width: 256,\n                    height: 256,\n                    text: sid\n                });\n            // pulsante per reload pagina\n            $('#btnNewCode', context).click(e => {\n                document.location.reload();\n            });\n            // controllo se e' avventua una richiesta del sid dall'app\n            // scaduto il tempo nascondo il qrcode e mostro pulsante per refresh pagina\n            const hnd = setInterval(() => {\n                $.get('/sync/check/' + sid)\n                    .then(data => {\n                        if (data.synced) {\n                            // TODO: caricare prossima pagina\n                        } else if (!--times) {\n                            $qrcode.hide();\n                            $('#btnNewCode', context).show()\n                            clearInterval(hnd);\n                        }\n                    })\n                    .fail((jqXHR, textStatus, errorThrown) => {\n                        clearInterval(hnd);\n                        swal({ title: 'Sync', text: textStatus + ': ' + errorThrown, type: 'error' }, () => {\n                            document.location.reload();\n                        });\n                    });\n            }, INTERVAL);\n        }\n    }\n})(jQuery);\n","($ => {\n    const fomratters = {\n        'datetime': value => moment(+value).format('YYYY-MM-DD HH:mm:ss'),\n        'status': value => fomratters[value] || value,\n        '0': 'NO_SYNC',\n        '1': 'SYNCED',\n        '2': 'DATA_RECEIVED'\n    }\n\n    window.JSVIEW['sync/list'] = {\n        ready: (context) => {\n            $('[data-format]', context).each((index, el) => {\n                el.innerHTML = fomratters[el.attributes['data-format'].value](el.innerText);\n            });\n\n            $('a[data-action]', context).click(e => {\n                e.stopPropagation();\n                e.preventDefault();\n\n                const action = e.target.attributes['data-action'].value;\n                const sid = e.target.attributes['data-sid'].value;\n\n                swal({\n                        title: action.capitalize() + ' ' + sid + '?',\n                        showCancelButton: true,\n                        closeOnConfirm: true\n                    },\n                    confirm => {\n                        if (confirm) {\n                            setTimeout(() => {\n                                if (action === 'sync') {\n                                    $.post('/sync/' + sid).then(() => {\n                                        location.reload();\n                                    }).fail((jqXHR, textStatus, errorThrown) => {\n                                        swal({ title: 'Sync', text: textStatus + ': ' + errorThrown, type: 'error' });\n                                    });\n                                } else if (action === 'expire') {\n                                    $.post('/sync/change/' + sid, { 'lastSync': Date.now() - 30000 }).then(() => {\n                                        location.reload();\n                                    }).fail((jqXHR, textStatus, errorThrown) => {\n                                        swal({ title: 'Expire', text: textStatus + ': ' + errorThrown, type: 'error' });\n                                    });\n                                }\n                            }, 100);\n                        }\n                    });\n            });\n        }\n    }\n})(jQuery);\n","String.prototype.capitalize = function() {\n\treturn this.charAt(0).toUpperCase() + this.slice(1);\n};"],"sourceRoot":"/source/"}
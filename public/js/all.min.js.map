{"version":3,"sources":["main.js","js/remote.js","js/sync.js","js/synccomics.js","js/synclist.js","js/utility.js"],"names":["$","loadPage","page","$pageBody","$searchbox","lastPageId","attr","load","responseText","textStatus","jqXHR","pageId","find","views","destroy","noop","toggle","length","off","ready","hide","empty","swal","title","text","type","initSearchBox","searchEl","minLength","timeout","cb","keyups","Rx","Observable","merge","fromEvent","map","e","target","value","trim","toUpperCase","filter","debounce","distinctUntilChanged","rxSearchForce","rxSearchForceNow","subscribe","window","JSVIEW","define","name","handler","defaultPage","onhashchange","location","hash","substr","term","trigger","jQuery","context","click","stopPropagation","preventDefault","action","attributes","message","showCancelButton","confirm","get","then","setTimeout","document","reload","fail","errorThrown","socket","$qrcode","sid","qrcode","width","height","WebSocket","host","onopen","event","send","JSON","stringify","onerror","error","console","log","onmessage","msg","parse","data","show","close","href","on","arrTerms","split","rg","RegExp","replace","index","el","matches","match","_","difference","fomratters","datetime","moment","format","status","0","1","3","each","innerHTML","innerText","capitalize","closeOnConfirm","post","lastSync","Date","now","String","prototype","this","charAt","slice"],"mappings":"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","file":"all.min.js","sourcesContent":["($ => {\n    // oggetto che andra' a contenere i riferimeti ai JS di tutte le pagine\n    const views = {\n        // \"page_name\": {\n        //     \"ready\": function(context) {},\n        //     \"destroy\": function(context) {}\n        // }\n        // sul contesto (context) possono essere registarti i seguenti eventi:\n        // - searchbox:search\n    };\n    // oggetto globale \n    window.JSVIEW = {\n        define: function(name, handler) {\n            views[name] = handler;\n        }\n    }\n\n    /**\n     * Carica la pagina specificata da \"page\"\n     *\n     * @param      {string}   page    nome della pagina da caricare\n     */\n    function loadPage(page) {\n        const $pageBody = $('.page-body');\n        const $searchbox = $('.searchbox');\n        const lastPageId = $pageBody.attr('data-page-id');\n        $pageBody.load('/' + page,\n            (responseText, textStatus, jqXHR) => {\n                if (textStatus === 'success') {\n                    // chiave dello script da eseguire\n                    const pageId = $pageBody.find('.page').attr('data-page-id');\n                    if (!pageId) {\n                        $searchbox.hide();\n                        $pageBody.empty();\n                        swal({ title: 'Page id not found', text: 'The page script can not be executed', type: 'error' });\n                    } else {\n                        // scarico la pagina corrente                    \n                        lastPageId && views[lastPageId] && (views[lastPageId].destroy || $.noop)($pageBody);\n                        // mostro o nascondo la barra di ricerca in base alla classe .with-searchbox\n                        $searchbox.toggle(!!$pageBody.find('.page.with-searchbox').length);\n                        // elimino gli eventi legati al contesto\n                        $pageBody.off('searchbox:search');\n                        // lancio lo script della pagina caricata\n                        $pageBody.attr('data-page-id', pageId);\n                        views[pageId] && (views[pageId].ready || $.noop)($pageBody);\n                    }\n                } else {\n                    $searchbox.hide();\n                    $pageBody.empty();\n                    swal({ title: 'Page not found', text: page, type: 'error' });\n                }\n            });\n    }\n\n    /**\n     * Inizializza la barra di ricerca.\n     * Al cambiamento del valore di ricerca viene eseguito cb(<termine ricerca>)\n     *\n     * @param      {Element}    searchEl   l'elemento HTML\n     * @param      {number}     minLength  numero minimo di caratteri per scatenare la ricerca\n     * @param      {number}     timeout    quanto tempo (in ms) deve passare prima di scatenare la ricerca (debounce)\n     * @param      {Function}   cb         { term: termine della ricerca }\n     */\n    function initSearchBox(searchEl, minLength, timeout, cb) {\n        // eventi sulla casella di ricerca (tasto premuto e perdita focus)\n        const keyups = Rx.Observable.merge(\n                Rx.Observable.fromEvent(searchEl, 'keyup'),\n                Rx.Observable.fromEvent(searchEl, 'blur'))\n            .map(e => e.target.value.trim().toUpperCase())\n            .filter(text => text.length === 0 || text.length >= minLength)\n            .debounce(timeout) //se non cambia piu' niente per 500ms prosegue\n            .distinctUntilChanged(); //esclude gli eventi diversi\n        const rxSearchForce = Rx.Observable.fromEvent(searchEl, 'rx-search-force')\n            .map(e => e.target.value.trim())\n            .debounce(timeout); //se non cambia piu' niente per 500ms prosegue\n        const rxSearchForceNow = Rx.Observable.fromEvent(searchEl, 'rx-search-force-now')\n            .map(e => e.target.value.trim());\n        //\n        Rx.Observable.merge(keyups, rxSearchForce, rxSearchForceNow)\n            .subscribe(cb);\n    }\n\n    $(() => {\n        // pagina di default\n        const defaultPage = 'sync';\n        // evento scatenato al cambio della parte hash\n        window.onhashchange = (() => {\n            loadPage(location.hash.substr(1) || defaultPage);\n        });\n        // inizializzo la barra di ricerca\n        initSearchBox($('.searchbox>input'), 3, 500, (term) => {\n            $('.page-body').trigger('searchbox:search', term);\n        });\n        // se non ci sono pagine specificate nell'hash, carico una pagina di default\n        loadPage(location.hash.substr(1) || defaultPage);\n    });\n})(jQuery);\n","($ => {\n    JSVIEW.define('remote', {\n        ready: (context) => {\n            $('button[data-action]', context).click(e => {\n                e.stopPropagation();\n                e.preventDefault();\n\n                const action = e.target.attributes['data-action'].value;\n                const title = e.target.attributes['data-confirm-title'].value;\n                const message = e.target.attributes['data-confirm-message'].value;\n\n                swal({\n                        title: title,\n                        text: message,\n                        showCancelButton: true\n                    },\n                    confirm => {\n                        if (confirm) {\n                            $.get('/remote/' + action).then(() => {\n                                // ritardo il refresh altrimenti rischio che il comando non sia stato ancora eseguito\n                                setTimeout(() => { document.location.reload(true); }, 500);\n                            }).fail((jqXHR, textStatus, errorThrown) => {\n                                swal({ title: 'Load processes', text: textStatus + ': ' + errorThrown, type: 'error' });\n                            });\n                        }\n                    });\n            });\n        }\n    });\n})(jQuery);\n","($ => {\n    let socket;\n\n    JSVIEW.define('sync', {\n        ready: (context) => {\n            const $qrcode = $('#qrcode', context);\n            const sid = $qrcode.attr('data-sid');\n            // renderizzo il sid passato con la pagina\n            $qrcode\n                .qrcode({\n                    width: 256,\n                    height: 256,\n                    text: sid\n                });\n            // pulsante per reload pagina\n            $('#btnNewCode', context).click(e => {\n                document.location.reload();\n            });\n            // creo un web socket e invio un messaggio al server per indicare che sono in attesa della sincronizzazione\n            socket = new WebSocket('ws://' + location.host + '/sync/wsh/' + sid);\n            socket.onopen = (event) => {\n                socket.send(JSON.stringify({ \"message\": \"wait for sync\" }));\n            };\n            socket.onerror = (error) => {\n                console.log(error);\n            };\n            socket.onmessage = (event) => {\n                // TODO: gestire messaggi in arrivo\n                const msg = JSON.parse(event.data);\n                if (msg.message === 'sync timeout') {\n                    $qrcode.hide();\n                    $('#btnNewCode', context).show()\n                    socket.close();\n                } else if (msg.message === 'sync start') {\n                    location.href = `#sync/comics/${sid}`;\n                }\n            };\n        },\n        destroy: (context) => {\n            socket.close();\n        }\n    });\n})(jQuery);\n","($ => {\n    JSVIEW.define('synccomics', {\n        ready: (context) => {\n        \t// registro l'evento per la ricerca\n            context.on('searchbox:search', (event, term) => {\n            \tif (term) {\n\t\t\t\t\tconst arrTerms = term.split(/\\s/);\n            \t\tconst termCount = arrTerms.length;\n\t\t\t\t\tconst rg = new RegExp('(' + term.replace(/\\s/g, '|') + ')', 'gi');\n\t\t\t\t\t$('.comics-list>.comics').hide()\n\t\t\t\t\t\t.filter((index, el) => {\n\t\t\t\t\t\t\t// tutti i termini della ricerca devono essere trovati\n\t\t\t\t\t\t\tconst matches = el.attributes['data-search'].value.match(rg);\n\t\t\t\t\t\t\treturn (matches && (_.difference(arrTerms, matches).length === 0));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.show();\n            \t} else {\n            \t\t$('.comics-list>.comics').show();\n            \t}\n            });\n        }\n    });\n})(jQuery);\n","($ => {\n    const fomratters = {\n        'datetime': value => moment(+value).format('YYYY-MM-DD HH:mm:ss'),\n        'status': value => fomratters[value] || value,\n        '0': 'NO_SYNC',\n        '1': 'SYNCED',\n        '3': 'DATA_RECEIVED'\n    }\n\n    JSVIEW.define('synclist', {\n        ready: (context) => {\n            $('[data-format]', context).each((index, el) => {\n                el.innerHTML = fomratters[el.attributes['data-format'].value](el.innerText);\n            });\n\n            $('a[data-action]', context).click(e => {\n                e.stopPropagation();\n                e.preventDefault();\n\n                const action = e.target.attributes['data-action'].value;\n                const sid = e.target.attributes['data-sid'].value;\n\n                swal({\n                        title: action.capitalize() + ' ' + sid + '?',\n                        showCancelButton: true,\n                        closeOnConfirm: true\n                    },\n                    confirm => {\n                        if (confirm) {\n                            setTimeout(() => {\n                                if (action === 'sync') {\n                                    // TODO aprie un WebSocket per simulare l'app\n                                } else if (action === 'expire') {\n                                    $.post('/sync/change/' + sid, { 'lastSync': Date.now() - 30000 }).then(() => {\n                                        location.reload();\n                                    }).fail((jqXHR, textStatus, errorThrown) => {\n                                        swal({ title: 'Expire', text: textStatus + ': ' + errorThrown, type: 'error' });\n                                    });\n                                } else if (action === 'remove') {\n                                    $.post('/sync/remove/' + sid).then(() => {\n                                        location.reload();\n                                    }).fail((jqXHR, textStatus, errorThrown) => {\n                                        swal({ title: 'Remove', text: textStatus + ': ' + errorThrown, type: 'error' });\n                                    });                                    \n                                }\n                            }, 100);\n                        }\n                    });\n            });\n        }\n    });\n})(jQuery);\n","String.prototype.capitalize = function() {\n\treturn this.charAt(0).toUpperCase() + this.slice(1);\n};"],"sourceRoot":"/source/"}
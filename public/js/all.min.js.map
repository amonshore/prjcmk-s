{"version":3,"sources":["main.js","js/remote.js","js/sync.js","js/synccomics.js","js/synclist.js","js/utility.js"],"names":["$","loadPage","page","console","log","$pageBody","$searchbox","lastPageId","attr","load","responseText","textStatus","jqXHR","pageId","find","pageTitle","views","destroy","noop","toggle","length","html","off","ready","hide","empty","swal","title","text","type","initSearchBox","searchEl","minLength","timeout","cb","keyups","Rx","Observable","merge","fromEvent","map","e","target","value","trim","toUpperCase","filter","debounce","distinctUntilChanged","rxSearchForce","rxSearchForceNow","subscribe","window","JSVIEW","define","name","handler","defaultPage","loadPageFromHash","hash","tokens","exec","onhashchange","location","term","trigger","jQuery","context","click","stopPropagation","preventDefault","action","attributes","message","showCancelButton","confirm","get","then","setTimeout","document","reload","fail","errorThrown","socket","$qrcode","sid","qrcode","width","height","WebSocket","host","onopen","event","send","JSON","stringify","onerror","error","onmessage","msg","parse","data","show","close","href","performAction","currentTarget","params","split","actions","apply","concat","_toConsumableArray","$comicsList","on","arrTerms","rg","RegExp","replace","index","el","matches","match","_","difference","toastr","success","edit","cid","$modal","material_select","siblings","addClass","openModal","fomratters","datetime","moment","format","status","0","1","3","each","innerHTML","innerText","capitalize","closeOnConfirm","post","lastSync","Date","now","String","prototype","this","charAt","slice","fn","ensureVisible","scrollIntoView"],"mappings":"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","file":"all.min.js","sourcesContent":["($ => {\n    // oggetto che andra' a contenere i riferimeti ai JS di tutte le pagine\n    const views = {\n        // \"page_name\": {\n        //     \"ready\": function(context) {},\n        //     \"destroy\": function(context) {}\n        // }\n        // sul contesto (context) possono essere registarti i seguenti eventi:\n        // - searchbox:search\n    };\n    // oggetto globale \n    window.JSVIEW = {\n        define: function(name, handler) {\n            views[name] = handler;\n        }\n    }\n\n    /**\n     * Carica la pagina specificata da \"page\"\n     *\n     * @param      {string}   page    nome della pagina da caricare\n     */\n    function loadPage(page) {\n        console.log('loadPage', page);\n        const $pageBody = $('.page-body');\n        const $searchbox = $('.searchbox');\n        const lastPageId = $pageBody.attr('data-page-id');\n        $pageBody.load('/' + page,\n            (responseText, textStatus, jqXHR) => {\n                if (textStatus === 'success') {\n                    // chiave dello script da eseguire\n                    const pageId = $pageBody.find('.page').attr('data-page-id');\n                    const pageTitle = $pageBody.find('.page').attr('data-page-title');\n                    if (!pageId) {\n                        $searchbox.hide();\n                        $pageBody.empty();\n                        swal({ title: 'Page id not found', text: 'The page script can not be executed', type: 'error' });\n                    } else {\n                        // scarico la pagina corrente                    \n                        lastPageId && views[lastPageId] && (views[lastPageId].destroy || $.noop)($pageBody);\n                        // mostro o nascondo la barra di ricerca in base alla classe .with-searchbox\n                        $searchbox.toggle(!!$pageBody.find('.page.with-searchbox').length);\n                        //\n                        $('nav .page-title').html(pageTitle);\n                        // elimino gli eventi legati al contesto\n                        $pageBody.off('searchbox:search');\n                        // lancio lo script della pagina caricata\n                        $pageBody.attr('data-page-id', pageId);\n                        views[pageId] && (views[pageId].ready || $.noop)($pageBody);\n                    }\n                } else {\n                    $searchbox.hide();\n                    $pageBody.empty();\n                    swal({ title: 'Page not found', text: page, type: 'error' });\n                }\n            });\n    }\n\n    /**\n     * Inizializza la barra di ricerca.\n     * Al cambiamento del valore di ricerca viene eseguito cb(<termine ricerca>)\n     *\n     * @param      {Element}    searchEl   l'elemento HTML\n     * @param      {number}     minLength  numero minimo di caratteri per scatenare la ricerca\n     * @param      {number}     timeout    quanto tempo (in ms) deve passare prima di scatenare la ricerca (debounce)\n     * @param      {Function}   cb         { term: termine della ricerca }\n     */\n    function initSearchBox(searchEl, minLength, timeout, cb) {\n        // eventi sulla casella di ricerca (tasto premuto e perdita focus)\n        const keyups = Rx.Observable.merge(\n                Rx.Observable.fromEvent(searchEl, 'keyup'),\n                Rx.Observable.fromEvent(searchEl, 'blur'))\n            .map(e => e.target.value.trim().toUpperCase())\n            .filter(text => text.length === 0 || text.length >= minLength)\n            .debounce(timeout) //se non cambia piu' niente per 500ms prosegue\n            .distinctUntilChanged(); //esclude gli eventi diversi\n        const rxSearchForce = Rx.Observable.fromEvent(searchEl, 'rx-search-force')\n            .map(e => e.target.value.trim())\n            .debounce(timeout); //se non cambia piu' niente per 500ms prosegue\n        const rxSearchForceNow = Rx.Observable.fromEvent(searchEl, 'rx-search-force-now')\n            .map(e => e.target.value.trim());\n        //\n        Rx.Observable.merge(keyups, rxSearchForce, rxSearchForceNow)\n            .subscribe(cb);\n    }\n\n    $(() => {\n        // pagina di default\n        const defaultPage = 'sync';\n        const loadPageFromHash = (hash) => {\n            const tokens = /^#!(.*)/.exec(hash);\n            if (tokens) {\n                loadPage(tokens[1] || defaultPage);\n            }\n        };\n        // evento scatenato al cambio della parte hash\n        window.onhashchange = (() => {\n            loadPageFromHash(location.hash);\n        });\n        // inizializzo la barra di ricerca\n        initSearchBox($('.searchbox input'), 3, 500, (term) => {\n            $('.page-body').trigger('searchbox:search', term);\n        });\n        // se non ci sono pagine specificate nell'hash, carico una pagina di default\n        loadPageFromHash(location.hash || '#!' + defaultPage);\n    });\n})(jQuery);\n","($ => {\n    JSVIEW.define('remote', {\n        ready: (context) => {\n            $('[data-action]', context).click(e => {\n                e.stopPropagation();\n                e.preventDefault();\n\n                const action = e.target.attributes['data-action'].value;\n                const title = e.target.attributes['data-confirm-title'].value;\n                const message = e.target.attributes['data-confirm-message'].value;\n\n                swal({\n                        title: title,\n                        text: message,\n                        showCancelButton: true\n                    },\n                    confirm => {\n                        if (confirm) {\n                            $.get('/remote/' + action).then(() => {\n                                // ritardo il refresh altrimenti rischio che il comando non sia stato ancora eseguito\n                                setTimeout(() => { document.location.reload(true); }, 500);\n                            }).fail((jqXHR, textStatus, errorThrown) => {\n                                swal({ title: 'Load processes', text: textStatus + ': ' + errorThrown, type: 'error' });\n                            });\n                        }\n                    });\n            });\n        }\n    });\n})(jQuery);\n","($ => {\n    let socket;\n\n    JSVIEW.define('sync', {\n        ready: (context) => {\n            const $qrcode = $('#qrcode', context);\n            const sid = $qrcode.attr('data-sid');\n            // renderizzo il sid passato con la pagina\n            $qrcode\n                .qrcode({\n                    width: 256,\n                    height: 256,\n                    text: sid\n                });\n            // pulsante per reload pagina\n            $('#btnNewCode', context).click(e => {\n                document.location.reload();\n            });\n            // creo un web socket e invio un messaggio al server per indicare che sono in attesa della sincronizzazione\n            socket = new WebSocket('ws://' + location.host + '/sync/wsh/' + sid);\n            socket.onopen = (event) => {\n                socket.send(JSON.stringify({ \"message\": \"wait for sync\" }));\n            };\n            socket.onerror = (error) => {\n                console.log(error);\n            };\n            socket.onmessage = (event) => {\n                // TODO: gestire messaggi in arrivo\n                const msg = JSON.parse(event.data);\n                if (msg.message === 'sync timeout') {\n                    $qrcode.hide();\n                    $('#btnNewCode', context).show()\n                    socket.close();\n                } else if (msg.message === 'sync start') {\n                    location.href = `#!sync/comics/${sid}`;\n                }\n            };\n        },\n        destroy: (context) => {\n            socket.close();\n        }\n    });\n})(jQuery);\n","($ => {\n    let socket;\n\n    JSVIEW.define('synccomics', {\n        ready: (context) => {\n            const $comicsList = $('.comics-list');\n            const sid = $comicsList.attr('data-sid');\n            // registro l'evento per la ricerca\n            context.on('searchbox:search', (event, term) => {\n                if (term) {\n                    const arrTerms = term.split(/\\s/);\n                    const termCount = arrTerms.length;\n                    const rg = new RegExp('(' + term.replace(/\\s/g, '|') + ')', 'gi');\n                    $('>.comics', $comicsList).hide()\n                        .filter((index, el) => {\n                            // tutti i termini della ricerca devono essere trovati\n                            const matches = el.attributes['data-search'].value.match(rg);\n                            return (matches && (_.difference(arrTerms, matches).length === 0));\n                        })\n                        .show();\n                } else {\n                    $('.comics-list>.comics').show();\n                }\n            });\n            // gestisco le azioni attraverso gli attributi data-action e data-action-params\n            $('[data-action]', $comicsList).click(event => performAction(sid, event));\n            // creo un web socket e invio un messaggio al server per indicare che sono in attesa della sincronizzazione\n            socket = new WebSocket('ws://' + location.host + '/sync/wsh/' + sid);\n            socket.onopen = (event) => {\n                //\n            };\n            socket.onerror = (error) => {\n                console.error(error);\n            };\n            socket.onmessage = (event) => {\n                // TODO: gestire messaggi in arrivo\n                const msg = JSON.parse(event.data);\n                // if (msg.message === 'sync timeout') {\n                //     socket.close();\n                // }\n                toastr.success(msg.message);\n            };\n        },\n        destroy: (context) => {\n            socket.close();\n        }\n    });\n\n    function performAction(sid, event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const action = event.currentTarget.attributes['data-action'].value;\n        const params = (event.currentTarget.attributes['data-action-params'].value || '').split(',');\n        if (actions[action]) {\n            actions[action](sid, ...params);\n        } else {\n            console.error(`action ${action} not found`);\n        }\n    }\n\n    const actions = {\n        /**\n         * Inizio la fase di editing del comics.\n         */\n        edit: function(sid, cid) {\n            const $modal = $('#modalDetail');\n            $('.modal-content', $modal)\n                .load('/sync/comics/' + sid + '/detail/' + cid, (responseText, textStatus, jqXHR) => {\n                    if (textStatus === 'success') {\n                        // inizializzo materialize\n                        $('select', $modal).material_select();\n                        // applico la classe \"active\" a tutte le label degli input con valore\n                        //  per evitare che la label si sovrapponga al contenuto del campo\n                        $('.input-field input[value!=\"\"]', $modal).siblings('label').addClass('active');\n                        // apro la finestra modale\n                        $modal.openModal();\n                    } else {\n                        toastr.error('err loading detail');\n                    }\n                });\n            // entro nello stato di edit (la lista comics viene nascosta)\n            $('.synccomics').addClass('editmode');\n            // TODO: carico il dettalgio\n            //$('.comics-detail')\n            // TODO: carico l'elenco delle release\n            //$('.release-list')\n        }\n    }\n})(jQuery);\n","($ => {\n    const fomratters = {\n        'datetime': value => moment(+value).format('YYYY-MM-DD HH:mm:ss'),\n        'status': value => fomratters[value] || value,\n        '0': 'NO_SYNC',\n        '1': 'SYNCED',\n        '3': 'DATA_RECEIVED'\n    }\n\n    JSVIEW.define('synclist', {\n        ready: (context) => {\n            $('[data-format]', context).each((index, el) => {\n                el.innerHTML = fomratters[el.attributes['data-format'].value](el.innerText);\n            });\n\n            $('a[data-action]', context).click(e => {\n                e.stopPropagation();\n                e.preventDefault();\n\n                const action = e.target.attributes['data-action'].value;\n                const sid = e.target.attributes['data-sid'].value;\n\n                swal({\n                        title: action.capitalize() + ' ' + sid + '?',\n                        showCancelButton: true,\n                        closeOnConfirm: true\n                    },\n                    confirm => {\n                        if (confirm) {\n                            setTimeout(() => {\n                                if (action === 'sync') {\n                                    // TODO aprie un WebSocket per simulare l'app\n                                } else if (action === 'expire') {\n                                    $.post('/sync/change/' + sid, { 'lastSync': Date.now() - 30000 }).then(() => {\n                                        location.reload();\n                                    }).fail((jqXHR, textStatus, errorThrown) => {\n                                        swal({ title: 'Expire', text: textStatus + ': ' + errorThrown, type: 'error' });\n                                    });\n                                } else if (action === 'remove') {\n                                    $.post('/sync/remove/' + sid).then(() => {\n                                        location.reload();\n                                    }).fail((jqXHR, textStatus, errorThrown) => {\n                                        swal({ title: 'Remove', text: textStatus + ': ' + errorThrown, type: 'error' });\n                                    });                                    \n                                }\n                            }, 100);\n                        }\n                    });\n            });\n        }\n    });\n})(jQuery);\n","String.prototype.capitalize = function() {\n\treturn this.charAt(0).toUpperCase() + this.slice(1);\n};\n\n//http://stackoverflow.com/a/27406756\n$.fn.ensureVisible = function () { $(this).each(function () { $(this)[0].scrollIntoView(); }); };"],"sourceRoot":"/source/"}